/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require bxslider
 *= require_tree .
 *= require_self
 */

@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+JP&family=Raleway&display=swap');

$theme-colors: (
    primary: #9DA897,
    success: #9DA897
);

$md: 991px;
$xs1: 575px;
@mixin md {
  @media (max-width: ($md)) {
    @content;
  }
}
@mixin xs1 {
  @media (max-width: ($xs1)) {
    @content;
  }
}

@import "bootstrap";
@import 'font-awesome-sprockets';
@import 'font-awesome';

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Raleway', 'Noto Sans JP', sans-serif;
    list-style: none;
    list-style: none;
}

html {
  scroll-behavior: smooth;
}

.link {
    text-decoration: none;
    color: #9da897;
}

a {
    @include md{
    font-size: clamp(20px,2vw);
  }
}

a:hover {
    text-decoration: none;
}

body {
    background-color: #f5f5f5;
    height: 100vh;
    @include md{
    font-size: clamp(20px,2vw);
  }
}

main {
    padding-bottom: 5vh;
}

#notice-box {
    z-index: 9999;
}
#notice {
    background: rgba(255, 255, 255, .5);
    padding: 1rem;
    border-radius: 30px;
    margin-top: 2rem;
    display: none;
}

#back {
    position: fixed;
    right: 50px;
    bottom: 50px;
}


footer {
    position: fixed;
    bottom: 0;
    background-color: #e8e8e8;
    height: 5vh;
}

.header {
    border-top: 3px solid #000;
}

.logo {
    margin: 0.5em auto;
    display: block;
}

.header-nav-btn {
    text-align: center;
    height: 6vh;
    line-height: 6vh;
    color: #5f5f5f;
    font-size: calc(25px + 1vw);
}

.header-nav-btn:hover {
    background: #EEE;
}

.navbar-toggler .navbar-toggler-icon {
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='30' height='30' viewBox='0 0 30 30'%3e%3cpath stroke='rgba(157, 168, 151, 1)' stroke-linecap='round' stroke-miterlimit='10' stroke-width='3' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
}

.page-heading {
    background: rgba(151, 168, 166, .3);
    padding: 1rem;
    border-radius: 30px;
    display: inline-block;
    text-align: center;
}

.notification-icon {
    position: absolute;
    padding-left: 25rem;
    padding-top: 0rem;
    color: #5f6527;
  @include md{
    position: absolute;
    padding-left: 2rem;
    padding-top: 10rem;
    color: #5f6527;
  }
}

.tag-list {
    margin: 1rem;
}

.tag-content {
    background: rgba(255, 255, 255, .5);
    border-radius: 20px;
    padding: 1rem;
    margin-right: 1vw;
}

// エラー404/500画面
$bgColor: #f7f7f7;
$jaggedDistance: 32px;

// boo
$booSize: $jaggedDistance * 5;
$booBg: $bgColor;
$booShadow: darken($booBg, 5%);

// face
$booFaceSize: round($jaggedDistance / 1.3333);
$booFaceColor: #9b9b9b;

// ===========

@keyframes floating {
  0% {
    transform: translate3d(0, 0, 0);  
  }
  45% {
    transform: translate3d(0, -10%, 0); 
  }
  55% {
    transform: translate3d(0, -10%, 0); 
  } 
  100% {
    transform: translate3d(0, 0, 0);
  }     
}

@keyframes floatingShadow {
  0% {
    transform: scale(1);  
  }
  45% {
    transform: scale(.85);  
  }
  55% {
    transform: scale(.85);  
  } 
  100% {
    transform: scale(1);
  }     
}

// ===========

@mixin border-bottom-jagged($size, $color-outer) {
  position: relative;
  padding-bottom: $size; 

  &::after {
    content: '';
    display: block;
    position: absolute;
    left: -($size / 1.7);
    bottom: -($jaggedDistance / 3.85);
    width: calc(100% + #{$size});
    height: $size;
    background-repeat: repeat-x;
    background-size: $size $size;
    background-position: left bottom;
    background-image: linear-gradient(-45deg, $color-outer ($size / 2), transparent 0),
                      linear-gradient(45deg, $color-outer ($size / 2), transparent 0),
                      linear-gradient(-45deg, $booFaceColor ($size / 1.7), transparent 0),
                      linear-gradient(45deg, $booFaceColor ($size / 1.7), transparent 0);
  }
}

// ===========

body {
  background-color: $bgColor;
}

.container {
  font-family: 'Varela Round', sans-serif;
  color: $booFaceColor;
  position: relative;
  height: 100vh;
  text-align: center;
  font-size: $jaggedDistance / 2;
  
  h1 {
    font-size: $jaggedDistance;
    margin-top: $jaggedDistance;
  }
}

.boo-wrapper {
  width: 100%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  paddig-top: $jaggedDistance * 2;
  paddig-bottom: $jaggedDistance * 2;
}

.boo {
  width: $booSize;
  height: $booSize + ($booSize * .15);
  background-color: $booBg;
  margin-left: auto;
  margin-right: auto;
  border: (($jaggedDistance / 1.65)  - ($jaggedDistance /2)) solid $booFaceColor;
  border-bottom: 0;
  overflow: hidden;
  border-radius: ($booSize / 2) ($booSize / 2) 0 0;
  box-shadow: -($jaggedDistance / 2) 0 0 2px rgba($booShadow, .5) inset;
  @include border-bottom-jagged($jaggedDistance, $bgColor);
  animation: floating 3s ease-in-out infinite;

  .face {
    width: $booFaceSize;
    height: $jaggedDistance / 10;
    border-radius: 5px;
    background-color: $booFaceColor;
    position: absolute;
    left: 50%;
    bottom: $jaggedDistance + $booFaceSize;
    transform: translateX(-50%);
    
    &::before,
    &::after {
      content: '';
      display: block;
      width: $booFaceSize / 4;
      height: $booFaceSize / 4;
      background-color: $booFaceColor;
      border-radius: 50%;
      position: absolute;
      bottom: $jaggedDistance + ($booFaceSize / 3);
    }
    
    &::before {
      left: -$booFaceSize;
    }
    
    &::after {
      right: -$booFaceSize;
    }
  } 
}

.shadow {
  width: $booSize - $jaggedDistance;
  height: $jaggedDistance / 2;
  background-color: rgba($booShadow, .75);
  margin-top: $jaggedDistance * 1.25;  
  margin-right: auto;
  margin-left: auto;
  border-radius: 50%;
  animation: floatingShadow 3s ease-in-out infinite;
}
